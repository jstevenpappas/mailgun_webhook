files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/run_supervised_rqworker.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      # Get environment variables
      rqworkerenv=`cat /opt/python/current/env | tr '\n' ',' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g'`
      rqworkerenv=${rqworkerenv%?}

      # Create rqworker configuraiton script
      rqworkerconf="[program:rqworker]
      ; Set full path to celery program if using virtualenv
      command=/opt/python/run/venv/bin/rqworker

      directory=/opt/python/current/app
      user=root
      numprocs=4
      process_name=%(program_name)s_%(process_num)02d
      stdout_logfile=/var/log/rqworker_stdout1.log
      stderr_logfile=/var/log/rqworker_stderr1.log
      autostart=true
      autorestart=true
      startsecs=1

      ; Need to wait for currently executing tasks to finish at shutdown.
      ; Increase this if you have very long running tasks.
      ;stopwaitsecs = 600

      ; When resorting to send SIGKILL to the program to terminate it
      ; send SIGKILL to its whole process group instead,
      ; taking care of its children as well.
      killasgroup=true

      ; if rabbitmq is supervised, set its priority higher
      ; so it starts first
      ;priority=998

      environment=$rqworkerenv"

      # Create the celery supervisord conf script
      echo "$rqworkerconf" | tee /opt/python/etc/rqworker.conf

      # Add configuration script to supervisord conf (if not there already)
      if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf
          then
          echo "[include]" | tee -a /opt/python/etc/supervisord.conf
          echo "files: rqworker.conf" | tee -a /opt/python/etc/supervisord.conf
      fi

      # Reread the supervisord config
      supervisorctl -c /opt/python/etc/supervisord.conf reread

      # Update supervisord in cache without restarting all services
      supervisorctl -c /opt/python/etc/supervisord.conf update

      # Start/Restart celeryd through supervisord
      supervisorctl -c /opt/python/etc/supervisord.conf restart rqworker